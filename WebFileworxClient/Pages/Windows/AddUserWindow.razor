@inject UsersServices usersServices

<div class="fixed top-0 left-0 w-full h-full flex justify-center items-center bg-black bg-opacity-10">
    <div class="p-4 bg-white border-3 border-solid border-fw-blue rounded-md shadow-md min-w-[1000px]">
        <div>
            <h2 class="text-3xl font-semibold">Add User</h2>
        </div>
        <div>
            <label class="font-semibold" for="name">Name:</label>
            <input class="p-2.5 w-full border-solid border-gray-300 border-2" @bind=name type="text" id="title" maxlength="255" />
        </div>
        <div>
            <label class="font-semibold" for="username">Username:</label>
            <input class="p-2.5 w-full border-solid border-gray-300 border-2" @bind=username type="text" id="description" maxlength="255" />
        </div>
        <div>
            <label class="font-semibold" for="password">Passsword:</label>
            <input class="p-2.5 w-full border-solid border-gray-300 border-2" @bind=password type="password" id="description" maxlength="255"></input>
        </div>
        <div>
            <label class="font-semibold" for="isadmin">Is Admin:</label>
            <select @bind=isAdmin class="p-2.5 border-solid border-gray-300 w-full border-2">
                <option value="False">No</option>
                <option value="True">Yes</option>
            </select>
        </div>
        <div class="flex justify-end gap-x-2 mt-4">
            <button class="bg-fw-blue hover:bg-fw-blue-hover rounded-md text-white p-2 cursor-pointer" @onclick=saveRequest><b>Save</b></button>
            <button class="bg-rid hover:bg-rid-hover rounded-md text-white p-2 cursor-pointer" @onclick=cancelRequest><b>Cancel</b></button>
        </div>
    </div>
</div>

@if (showInvalidInfo)
{
    <InvalidInfoWindow Title="Empty Fields" OnClose="hideInvalidInfo" />
}

@code {
    [Parameter]
    public EventCallback<clsUser> OnSave { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    // Binded
    private string name;
    private string username;
    private string password;
    private string isAdmin="False";

    // Display
    private bool showInvalidInfo = false;

    private async Task cancelRequest()
    {
        name = String.Empty; username = String.Empty; password = String.Empty; isAdmin = "No";
        await OnCancel.InvokeAsync();
    }

    private async Task saveRequest()
    {
        if ((name == String.Empty) || (name == null) || (username == String.Empty) || (username == null) || (password == String.Empty) || (password == null) || (isAdmin == String.Empty) || (isAdmin == null))
        {
            showInvalidInfo = true;
        }

        else
        {
            clsUser addedUser = new clsUser()
                {
                    Id = Guid.NewGuid(),
                    CreatorId = usersServices.LoggedInUser.Id,
                    CreatorName = usersServices.LoggedInUser.Name,
                    Name = name,
                    Username = username,
                    Password = password,
                    IsAdmin = (isAdmin == "True") ? true : false,
                    Class = FileworxObjectClassLibrary.Type.User
                };

            await OnSave.InvokeAsync(addedUser);
        }
    }

    private void hideInvalidInfo() { showInvalidInfo = false; }

}
